{"version":3,"sources":["getWeb3.js","components/Proposal/ProposalListe.jsx","components/Proposal/ProposalListeWithVote.jsx","components/Admin/AdminWorkflow.jsx","components/Admin/AdminPanel.jsx","components/Admin/AdminVoters.jsx","components/Address/Address.jsx","components/Message/Message.jsx","components/Proposal/ProposalWinner.jsx","App.js","serviceWorker.js","index.js"],"names":["getWeb3","Promise","resolve","reject","window","addEventListener","ethereum","web3","Web3","enable","on","alert","location","reload","console","log","provider","providers","HttpProvider","ProposalListe","className","this","props","proposals","map","proposal","index","description","React","Component","voteCount","AdminWorkflow","step0Active","step1Active","step2Active","step3Active","step4Active","step5Active","currentStep","isAdmin","AdminPanel","addVoter","state","contract","accounts","valeur","document","getElementById","value","methods","send","from","startStepProposalsRefistration","startProposalsRegistering","endProposalsRegistering","startVotingSession","endVotingSession","tallyVotes","type","id","onClick","AdminVoters","votersList","votersAddressList","componentDidMount","options","fromBlock","toBlock","getPastEvents","listVoters","votersListing","votersAdressListing","j","length","getVoter","returnValues","voterAddress","call","push","setState","voter","String","hasVoted","isRegistered","votedProposalId","Address","src","width","alt","addrr","Message","message1","message2","ProposalWinner","winningID","winningDesc","winningCount","winningProposalID","getOneProposal","winningProposal","App","isVoter","voters","eth","getAccounts","net","getId","networkId","deployedNetwork","VotingContract","networks","instance","Contract","abi","address","owner","contractOwnerAddresse","i","workflowStatus","listProposals","proposalId","events","WorkflowStatusChange","event","currentStepFromEvent","newStatus","error","addProposal","vote","votedId","setVote","Boolean","hostname","match","ReactDOM","createRoot","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f3ee50b9.chunk.js","sourcesContent":["import Web3 from \"web3\";\n\nconst getWeb3 = () =>\n  new Promise((resolve, reject) => {\n    // Wait for loading completion to avoid race conditions with web3 injection timing.\n    window.addEventListener(\"load\", async () => {\n      // Modern dapp browsers...\n      if (window.ethereum) {\n        const web3 = new Web3(window.ethereum);\n        try {\n          // Request account access if needed\n          await window.ethereum.enable();\n          // Accounts now exposed\n          resolve(web3);\n          window.ethereum.on('disconnect',function(){\n            alert(\"il faut se connecter\");\n          });\n          window.ethereum.on('accountsChanged',function(){\n            window.location.reload();\n          });     \n          window.ethereum.on('chainChanged',function(){\n            window.location.reload();\n          });\n       \n        } catch (error) {\n          reject(error);\n        }\n      }\n      // Legacy dapp browsers...\n      else if (window.web3) {\n        // Use Mist/MetaMask's provider.\n        const web3 = window.web3;\n        console.log(\"Injected web3 detected.\");\n        resolve(web3);\n      }\n      // Fallback to localhost; use dev console port by default...\n      else {\n        const provider = new Web3.providers.HttpProvider(\n          \"http://127.0.0.1:8545\"\n        );\n        const web3 = new Web3(provider);\n        console.log(\"No web3 instance injected, using Local web3.\");\n        resolve(web3);\n      }\n    });\n  });\n\nexport default getWeb3;\n","import React from 'react';\nimport './ProposalListe.css';\n\nexport default class ProposalListe extends React.Component {\n\n    render() {\n    \n        return(\n            <div className=\"liste\">\n                <div className='container message mb-4'>\n                    <div className='row justify-content-center'>\n                        <div className='col-6 pt-3 pb-2'>\n                            <h2 className='text-center'>Liste des propositions</h2>\n                            <table className=\"table\">\n                                <thead>\n                                    <tr>\n                                        <th>#Id</th>\n                                        <th>Proposition</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {this.props.proposals.map((proposal, index) => (\n                                    <tr key={index}>\n                                        <td>{index}</td>\n                                        <td>{proposal.description}</td>\n                                    </tr>\n                                    ))}\n                                </tbody>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n}\n","import React from 'react';\nimport './ProposalListe.css';\n\nexport default class ProposalListe extends React.Component {\n\n    render() {\n\n        return(\n            <div className=\"liste\">\n                <div className='container message mb-4'>\n                    <div className='row  justify-content-center'>\n                        <div className='col-8 pt-3 pb-2'>\n                            <h2 className='text-center'>Liste des propositions</h2>\n                            <table className=\"table\">\n                                <thead>\n                                    <tr>\n                                        <th>#Id</th>\n                                        <th>Proposition</th>\n                                        <th className=\"text-end\">Nb. votes</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {this.props.proposals.map((proposal, index) => (\n                                    <tr key={index}>\n                                        <td>{index}</td>\n                                        <td>{proposal.description}</td>\n                                        <td className=\"text-end\">{proposal.voteCount}</td>\n                                    </tr>\n                                    ))}\n                                </tbody>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n}\n","import React from 'react';\nimport './AdminWorkflow.css';\n\nexport default class AdminWorkflow extends React.Component {\n\n    constructor(props) {\n        \n        super(props);\n\n        this.step0Active = \"\";\n        this.step1Active = \"\";\n        this.step2Active = \"\";\n        this.step3Active = \"\";\n        this.step4Active = \"\";\n        this.step5Active = \"\";\n        \n        if (this.props.currentStep === '0') {\n            this.step0Active = \" active\";\n        }\n\n        if (this.props.currentStep === '1') {\n            this.step1Active = \" active\";\n        }\n\n        if (this.props.currentStep === '2') {\n            this.step2Active = \" active\";\n        }\n\n        if (this.props.currentStep === '3') {\n            this.step3Active = \" active\";\n        }\n\n        if (this.props.currentStep === '4') {\n            this.step4Active = \" active\";\n        }\n\n        if (this.props.currentStep === '5') {\n            this.step5Active = \" active\";\n        }\n    }\n\n\n    render(){\n\n        if (this.props.isAdmin === true) {\n\n            return(\n                <div className='container'>\n                    <div className='row'>\n                        <div className='col-12'>\n                            <nav aria-label=\"breadcrumb\">\n                                <ol className='breadcrumb'>\n                                    <li className={`breadcrumb-item ${this.step0Active}`}>RegisteringVoters</li>\n                                    <li className={`breadcrumb-item ${this.step1Active}`}>ProposalsRegistrationStarted</li>\n                                    <li className={`breadcrumb-item ${this.step2Active}`}>ProposalsRegistrationEnded</li>\n                                    <li className={`breadcrumb-item ${this.step3Active}`}>VotingSessionStarted</li>\n                                    <li className={`breadcrumb-item ${this.step4Active}`}>VotingSessionEnded</li>\n                                    <li className={`breadcrumb-item ${this.step5Active}`}>VotesTallied</li>\n                                </ol>\n                            </nav>\n                        </div>\n                    </div>\n                </div>\n            )\n\n        }\n    }\n\n}\n","import React from 'react';\nimport AdminWorkflow from \"./AdminWorkflow\";\nimport './AdminPanel.css';\n\nexport default class AdminPanel extends React.Component {\n    \n    // Ajout d'un voter\n    addVoter = async () => {\n        const { contract,accounts } = this.props.state;\n        let valeur = document.getElementById(\"voterAddress\").value;\n        await contract.methods.addVoter(valeur).send({from: accounts[0]});\n\n        // On vide le champs de saisie\n        document.getElementById(\"voterAddress\").value = ''; \n    }\n\n    // Passage au step 1 du Workflow Status\n    startStepProposalsRefistration = async() => {\n        const { contract,accounts } = this.props.state;\n        await contract.methods.startProposalsRegistering().send({from: accounts[0]});\n    }\n\n    // Passage au step 2 du Workflow Status\n    endProposalsRegistering = async() => {\n        const { contract,accounts } = this.props.state;\n        await contract.methods.endProposalsRegistering().send({from: accounts[0]});\n    }\n\n    // Passage au step 3 du Workflow Status\n    startVotingSession = async() => {\n        const { contract,accounts } = this.props.state;\n        await contract.methods.startVotingSession().send({from: accounts[0]});\n    }\n\n    // Passage au step 4 du Workflow Status\n    endVotingSession = async() => {\n        const { contract,accounts } = this.props.state;\n        await contract.methods.endVotingSession().send({from: accounts[0]});\n    }\n\n    // Passage au step 5 du Workflow Status\n    tallyVotes = async() => {\n        const { contract,accounts } = this.props.state;\n        await contract.methods.tallyVotes().send({from: accounts[0]});\n    }\n\n    render(){\n\n        if (this.props.isAdmin === true) {\n\n            if( this.props.currentStep === '0' ) {\n                return(\n                    <div className=\"adminpanel fixed-bottom\">\n                        <AdminWorkflow currentStep={this.props.currentStep} isAdmin={this.props.isAdmin} />\n                        <div className='container'>\n                            <div className='row'>\n                                <div className='col-8 text-left'>\n                                    <input type=\"text\" id=\"voterAddress\" /><button id=\"voterButton\" className='btn btn-secondary mb-3' onClick={this.addVoter}>Add Voter</button>\n                                </div>\n                                <div className='col-4 text-right'>\n                                    <button className='btn btn-primary  mb-3' onClick={this.startStepProposalsRefistration}>Start Proposals registration</button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                )\n            } \n\n            if( this.props.currentStep === '1' ){\n                return(\n                    <div className=\"adminpanel fixed-bottom\">\n                        <AdminWorkflow currentStep={this.props.currentStep} isAdmin={this.props.isAdmin} />\n                        <div className='container'>\n                            <div className='row'>\n                                <div className='col-12 text-right'>\n                                    <button className='btn btn-primary  mb-3' onClick={this.endProposalsRegistering}>Close Proposals registration</button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                )\n            }\n            \n            if( this.props.currentStep === '2' ){\n                return(\n                    <div className=\"adminpanel fixed-bottom\">\n                        <AdminWorkflow currentStep={this.props.currentStep} isAdmin={this.props.isAdmin} />\n                        <div className='container'>\n                            <div className='row'>\n                                <div className='col-12 text-right'>\n                                    <button  className='btn btn-primary  mb-3' onClick={this.startVotingSession}>Start Voting Session</button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                )\n            }\n            \n            if( this.props.currentStep === '3' ){\n                return(\n                    <div className=\"adminpanel fixed-bottom\">\n                        <AdminWorkflow currentStep={this.props.currentStep} isAdmin={this.props.isAdmin} />\n                        <div className='container'>\n                            <div className='row'>\n                                <div className='col-12 text-right'>\n                                    <button className='btn btn-primary mb-3' onClick={this.endVotingSession}>End Voting Session</button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                )\n            }\n            \n            if( this.props.currentStep === '4' ){\n                return(\n                    <div className=\"adminpanel fixed-bottom\">\n                        <AdminWorkflow currentStep={this.props.currentStep} isAdmin={this.props.isAdmin} />\n                        <div className='container'>\n                            <div className='row'>\n                                <div className='col-12 text-right'>\n                                    <button className='btn btn-primary mb-3' onClick={this.tallyVotes}>Start tallyVotes</button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                )\n            }\n            \n            if( this.props.currentStep === '5' ){\n                return(\n                    <div className=\"adminpanel fixed-bottom\">\n                        <AdminWorkflow currentStep={this.props.currentStep} isAdmin={this.props.isAdmin} />\n                    </div>\n                )\n            }\n        }\n    }\n\n}\n","import React from 'react';\n\nexport default class AdminVoters extends React.Component {\n            \n    state = { votersList: [], votersAddressList: []};\n\n    componentDidMount = async () => {\n    \n        const { contract, accounts } = this.props.state;\n\n        let options = {\n            fromBlock: 0,\n            toBlock: 'latest'\n          };\n\n        // Recherche de la liste des voters\n        let listVoters = await contract.getPastEvents('VoterRegistered', options);   \n      \n        // Construction du tableau des voters\n        let votersListing = [];\n        let votersAdressListing = [];\n        for(let j=0; j < listVoters.length; j++){\n            votersListing.push(await contract.methods.getVoter(listVoters[j].returnValues.voterAddress).call({from: accounts[0]}));\n            votersAdressListing.push(listVoters[j].returnValues.voterAddress);\n        }\n\n        this.setState({ votersList: votersListing, votersAddressList: votersAdressListing });\n    }\n\n    render(){\n        return(\n            <div className=\"voters\">\n                <div className='container message mb-4'>\n                    <div className='row  justify-content-center'>\n                        <div className='col-10 pt-3 pb-2'>\n                            <h2 className='text-center'>Liste des Voters et des votes</h2>\n                            <p className='text-center'>Affichage de la whitelist pour l'administrateur, ainsi que des votes des personnes.</p>\n                            <table className=\"table table-sm\">\n                                <thead>\n                                    <tr>\n                                        <th>#id</th>\n                                        <th>Address</th>\n                                        <th className='text-center'>hasVoted</th>\n                                        <th className='text-center'>isRegistered</th>\n                                        <th className=\"text-end\">votedProposalId</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                {this.state.votersList.map((voter, index) => (\n                                    <tr key={index}>\n                                        <td>{index}</td>\n                                        <td>{this.state.votersAddressList[index]}</td>\n                                        <td className='text-center'>{String(voter.hasVoted)}</td>\n                                        <td className='text-center'>{String(voter.isRegistered)}</td>\n                                        <td className=\"text-end\">{voter.votedProposalId}</td>\n                                    </tr>\n                                ))}\n                                </tbody>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n}\n","import React from 'react';\nimport './Address.css';\n\n\nexport default class Address extends React.Component {\n\n    render(){\n        return(\n            <div className='container-fluid header mb-4 sticky-top'>\n                <div className='row'>\n                    <div className='col-6'>\n                        <img src=\"/voting_logo.png\" width=\"70\" id=\"logo\" alt=\"voting system logo\" />\n                    </div>\n                    <div className='col-6 px-2 text-right'>\n                        <p className='px-3 pt-3'>Votre adressse : <b>{this.props.addrr}</b></p>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n}\n","import React from 'react';\n\nexport default class Message extends React.Component {\n\n    render(){\n\n        this.message1 = \"La soumission des propositions n'est pas encore ouvertes.\";\n        this.message2 = \"Veuillez patienter jusqu'à ce que l'administrateur ouvre les soumissions.\";\n\n        if (this.props.currentStep === '1') {\n            this.message1 = \"La soumission des propositions est ouvertes.\";\n            this.message2 = \"Vous pouvez soumettre vos propositions.\";\n        }\n\n        if (this.props.currentStep === '2') {\n            this.message1 = \"Les votes pour les propositions ne sont pas encore ouverts.\";\n            this.message2 = \"Veuillez patienter jusqu'à ce que l'administrateur ouvre les votes.\";\n        }\n\n        if (this.props.currentStep === '3') {\n            this.message1 = \"Les votes pour les propositions sont ouverts.\";\n            this.message2 = \"Vous pouvez voter pour votre proposition préférée.\";\n        }\n\n        if (this.props.currentStep === '4') {\n            this.message1 = \"Les votes pour les propositions sont clos.\";\n            this.message2 = \"Vous devez attendre le dépouillement par l'administrateur pour connaitre le gagnant.\";\n        }\n\n        if (this.props.currentStep === '5') {\n            this.message1 = \"Les votes pour les propositions sont clos.\";\n            this.message2 = \"Le gagnant est maintenant connus\";\n        }\n\n        return(\n            <div className='container message mb-4'>\n                <div className='row'>\n                    <div className='col-12'>\n                        <h1 className='text-center mb-4'>Amazing Voting System</h1>\n                    </div>\n                    <div className='col-12 text-center'>\n                        <p>{this.message1}</p>\n                        <p>{this.message2}</p>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n}\n","import React from 'react';\nimport './ProposalWinner.css';\n\nexport default class ProposalWinner extends React.Component {\n\n    state = { winningID: 0, winningDesc: null, winningCount: null};\n        \n    componentDidMount = async () => {\n    \n        const { contract, accounts } = this.props.state;\n\n        // Récupération de l'Id de la proposition gagnante\n        const winningID = await contract.methods.winningProposalID().call();\n\n        // Récupération de la proposition gagnante\n        const winningProposal= await contract.methods.getOneProposal(winningID).call({from: accounts[0]});\n\n        this.setState({ winningID: winningID, winningDesc: winningProposal.description, winningCount: winningProposal.voteCount });\n    }\n\n    render(){\n        return(\n            <div className=\"winner\">\n                <div className='container message mb-4'>\n                    <div className='row justify-content-center'>\n                        <div className='col-6 pt-3 pb-2'>\n                            <h2 className='text-center'>Nous avons notre grand gagnant!</h2>\n                            <p> C'est la proposition <b>{this.state.winningDesc}</b>, de numéro d'id <b>{this.state.winningID}</b> avec <b>{this.state.winningCount}</b> votes. </p>         \n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n}\n","import React, { Component } from \"react\";\nimport VotingContract from \"./contracts/Voting.json\";\nimport getWeb3 from \"./getWeb3\";\n\nimport \"./App.css\";\n\nimport ProposalListe from \"./components/Proposal/ProposalListe\";\nimport ProposalListeWithVote from \"./components/Proposal/ProposalListeWithVote\";\nimport AdminPanel from \"./components/Admin/AdminPanel\";\nimport AdminVoters from \"./components/Admin/AdminVoters\";\nimport Address from \"./components/Address/Address\";\nimport Message from \"./components/Message/Message\";\nimport ProposalWinner from \"./components/Proposal/ProposalWinner\";\n\nclass App extends Component {\n\n  state = { web3: null, contract: null, currentStep: 0, isAdmin: false, isVoter: false, accounts: null, voters: null, proposals: null};\n\n  componentDidMount = async () => {\n    try {\n      // Get network provider and web3 instance.\n      const web3 = await getWeb3();\n\n      // Use web3 to get the user's accounts.\n      const accounts = await web3.eth.getAccounts();\n\n      // Get the contract instance.\n      const networkId = await web3.eth.net.getId();\n      const deployedNetwork = VotingContract.networks[networkId];\n      const instance = new web3.eth.Contract(\n        VotingContract.abi,\n        deployedNetwork && deployedNetwork.address,\n      );\n\n      let options = {\n        fromBlock: 0,\n        toBlock: 'latest'\n      };\n\n      // Récupération de l'adresse du propriétaire du contrat\n      let contractOwnerAddresse = await instance.methods.owner().call();\n\n      // Vérification si l'on est admin\n      let isAdmin = false;\n      if ( contractOwnerAddresse === accounts[0] ) {\n        isAdmin = true;\n      }\n\n     // Recherche de la liste des Voters\n     let listVoters = await instance.getPastEvents('VoterRegistered', options);\n\n      // Vérification si l'on est un voter\n      let isVoter = false;\n      if( listVoters.length !== 0 ) {\n        for(let i=0; i<listVoters.length; i++){\n          if(listVoters[i].returnValues.voterAddress === accounts[0]){\n            isVoter = true;\n          }\n        }\n      }\n\n      // Recherche du WorkflowStatus\n      let currentStep = await instance.methods.workflowStatus().call();\n\n      // Recherche de la liste des propositions\n      let listProposals = await instance.getPastEvents('ProposalRegistered', options);   \n      \n      // Construction du tableau des propositions\n      let proposals=[];\n      for(let j=0; j < listProposals.length; j++){\n        proposals.push(await instance.methods.getOneProposal(listProposals[j].returnValues.proposalId).call({from: accounts[0]}));\n      }\n  \n      // Subscribe à l'event WorkflowStatusChange pour adapter l'affichage\n      instance.events.WorkflowStatusChange(options)\n        .on('data', event => {\n          let currentStepFromEvent = event.returnValues.newStatus;\n          this.setState({currentStep:currentStepFromEvent});\n        }\n      );\n        \n      // Update des informations du state\n      this.setState({ web3, contract: instance, currentStep, isAdmin, isVoter, accounts, voters: listVoters, proposals: proposals});\n\n    } catch (error) {\n      // Catch any errors for any of the above operations.\n      alert(\n        `Failed to load web3, accounts, or contract. Check console for details.`,\n      );\n      console.error(error);\n    }\n  };\n\n  // Enregistrement d'une proposition\n  addProposal = async () => {\n    const {accounts, contract} = this.state;\n    let proposal = document.getElementById(\"propositionValue\").value;\n\n    await contract.methods.addProposal(proposal).send({from: accounts[0]});\n\n    let options = {\n      fromBlock: 0,\n      toBlock: 'latest'\n    };\n\n    // rafraichis la liste des proposals\n    let listProposals = await contract.getPastEvents('ProposalRegistered', options);  \n    let proposals = [];\n    for(let j=0; j < listProposals.length; j++) {\n      proposals.push(await contract.methods.getOneProposal(listProposals[j].returnValues.proposalId).call({from: accounts[0]}));\n    }\n\n    // Update de la liste des propositions dans le state\n    this.setState({proposals:proposals});\n\n    document.getElementById(\"propositionValue\").value = '';\n  }\n\n  // Enregistrement d'un vote\n  vote = async() => {\n    const { accounts, contract} = this.state;\n    let votedId = document.getElementById(\"propositionId\").value; \n    await contract.methods.setVote(votedId).send({from: accounts[0]});\n   \n    // Vide le champs de saisie\n    document.getElementById(\"propositionId\").value = '';\n  }\n\n  render() {\n    if (!this.state.web3) {\n      return <div>Loading Web3, accounts, and contract...</div>;\n    }\n\n    if (this.state.isAdmin === false && this.state.isVoter === false) {\n      return (\n        <div className=\"App\">\n          <Address addrr={this.state.accounts} />\n          <div>Vous n'avez pas accès à cette application</div>\n        </div>\n      )\n    }\n\n    if( this.state.currentStep === '0' ) {\n      return (\n        <div className=\"App\">\n          <Address addrr={this.state.accounts} />\n          <Message  currentStep={this.state.currentStep} />\n          <AdminPanel currentStep={this.state.currentStep} isAdmin={this.state.isAdmin} state={this.state} />\n        </div>\n      );\n    }\n\n    if( this.state.currentStep === '1' ) {\n      return (\n        <div className=\"App\">\n          <Address addrr={this.state.accounts} />\n          <Message  currentStep={this.state.currentStep} />\n          <div className=\"text-center\">\n            <h2>Enregistrer votre proposition</h2>\n            <input type=\"text\" id=\"propositionValue\" />\n            <button onClick={this.addProposal}>Ajouter</button>\n          </div>\n          <ProposalListe proposals={this.state.proposals} />\n          <AdminPanel currentStep={this.state.currentStep} isAdmin={this.state.isAdmin} state={this.state} />\n        </div>\n      );\n    }\n\n    if( this.state.currentStep === '2' ) {\n      return (\n        <div className=\"App\">\n          <Address addrr={this.state.accounts} />\n          <Message  currentStep={this.state.currentStep} />\n          <ProposalListe proposals={this.state.proposals} />\n          <AdminPanel currentStep={this.state.currentStep} isAdmin={this.state.isAdmin} state={this.state} />\n        </div>\n      );\n    }\n\n    if( this.state.currentStep === '3' ) {\n      return (\n        <div className=\"App\">\n          <Address addrr={this.state.accounts} />\n          <Message  currentStep={this.state.currentStep} />\n          <div className=\"text-center\">\n            <h2>Votez pour votre proposition</h2>\n            <input type=\"text\" id=\"propositionId\" />\n            <button onClick={this.vote}>Voter</button>\n          </div>\n          <ProposalListe proposals={this.state.proposals} />\n          <AdminPanel currentStep={this.state.currentStep} isAdmin={this.state.isAdmin} state={this.state} />\n        </div>\n      );\n    }\n\n    if( this.state.currentStep === '4' ) {\n      return (\n        <div className=\"App\">\n          <Address addrr={this.state.accounts} />\n          <Message  currentStep={this.state.currentStep} />\n          <ProposalListe proposals={this.state.proposals} currentStep={this.state.currentStep} />\n          <AdminPanel currentStep={this.state.currentStep} isAdmin={this.state.isAdmin} state={this.state} />\n        </div>\n      );\n    }\n\n    if( this.state.currentStep === '5' ) {\n      return (\n        <div className=\"App\">\n          <Address addrr={this.state.accounts} />\n          <Message currentStep={this.state.currentStep} />\n          <ProposalWinner currentStep={this.state.currentStep}  state={this.state}  />\n          <ProposalListeWithVote proposals={this.state.proposals} currentStep={this.state.currentStep} />\n          <AdminPanel currentStep={this.state.currentStep} isAdmin={this.state.isAdmin} state={this.state} />\n          <AdminVoters currentStep={this.state.currentStep} isAdmin={this.state.isAdmin}  state={this.state}  />\n        </div>\n      );\n    }\n\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from \"react-dom/client\";\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render( <App />);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}